import csv
from handlers.create_docx import DocMaker


class Vulnerability:
    type_ = 'vulnerability'

    def __init__(self, config, source, destination, system_platform):
        self.source = source
        self.slash = "/"
        if system_platform == 'windows':
            self.slash = "\\"
        self.destination = destination if destination.endswith(self.slash) else destination + self.slash
        self.info_fields = config[self.type_]['info_fields']
        self.network_fields = config[self.type_]['network']
        self.risks = config[self.type_]['risks']
        self.document_maker = DocMaker(config['document'], self.type_, self.destination)

    def process(self):
        data = self.collect_data()
        filtered_data = self.filter_ips(data)
        self.document_maker.process(filtered_data)

    @staticmethod
    def filter_ips(data):
        for name in data:
            ips = {}
            network = []
            for ip, port, protocol in data[name]['Network']:
                if ip not in ips:
                    ips[ip] = {}
                if not ips[ip].get(protocol):
                    ips[ip][protocol] = []
                if port not in ips[ip].get(protocol):
                    ips[ip][protocol].append(port)
            for ip, protocols in ips.items():
                x = []
                for protocol, port_list in protocols.items():
                    for port in port_list:
                        s = f"{protocol.upper()}/{port}"
                        x.append(s)
                if x:
                    a = ", ".join(x)
                    network.append(f"{ip} ({a})")
            data[name]['Network'] = network
        return data

    def collect_data(self):
        columns = {}
        info = {}

        with open(self.source, 'r', encoding='utf-8') as csv_file:
            reader = csv.reader(csv_file)
            line = 1
            for row in reader:
                if line == 1:
                    columns = {item: index for index, item in enumerate(row)}
                    line += 1
                else:
                    if row[columns['Risk']] in self.risks:
                        name = row[columns['Name']]
                        if name not in info:
                            current_info = {'CVE': [], 'Network': [], 'Name': '', 'Synopsis': '', 'Description': '',
                                            'Solution': '', 'Risk': ''}
                            info[name] = current_info
                        for field in self.info_fields:
                            if field == 'CVE':
                                cve = row[columns['CVE']]
                                if cve and cve not in info[name][field]:
                                    info[name][field].append(cve)
                            else:
                                info[name][field] = row[columns[field]]
                        network = tuple(row[columns[field]] for field in self.network_fields)
                        info[name]['Network'].append(network)
                    # if line == 500:
                    #     break
                    # line += 1
        return info
